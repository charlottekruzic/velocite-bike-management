package fr.ufc.l3info.oprog;

import org.jetbrains.annotations.NotNull;

import java.util.*;

public class Exploitant {
    Set<IVelo> velos;
    IVelo velo_neuf;
    Exploitant(){
        velos=new HashSet<IVelo>();
    }

    void acquerirVelo(IVelo v){
        velos.add(v);
    }

    void entretenirVelos(){

        //Retirer les vélos abimés et les remplacer si possible
        //Parcours des bornes pour trouver les vélos abimés
        for(IVelo v : velos){
            if (v.estAbime()) {
                //v=velo_neuf;
                velos.remove(v);
                velos.add(velo_neuf);
            }
        }
        //Retirer et remplacer les vélos à réviser si possible
        //Parcours des bornes pour trouver les vélos à réviser
        for(IVelo v : velos){
            if (v.kilometrage() >= 500) {
                velos.remove(v);
                velos.add(velo_neuf);
            }
        }
    }

    void ravitailler(Ville v){
        for(Station s : v){
            s.equilibrer(velos);
        }
    }




}
